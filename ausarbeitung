public class Ausarbeitung{
    public static int[] ZufallsListe(int n){
        int[] liste = new int[n];
        int x;
        boolean vorhanden;
        for(int i=0; i<n;i++){
            x = (int) Math.floor(n*Math.random()+1); 
            liste[i] = x;
        }
        return liste;
    }

    public static int[] kopieren(int []liste){
        int []liste2 = new int [liste.length];
        for( int n=0;n<liste.length;n++){
            liste2 [n]= liste[n];
        }
        return liste2;  
    }

    public static void Tauschen(int []Zahlenreihe,int a, int b){
        int[] neueliste =  Zahlenreihe;
        int temp = Zahlenreihe[a];
        neueliste[a]=Zahlenreihe[b];
        neueliste[b] = temp;
    }

    public static void SORTIEREN(int[] liste) {
        for(int i=1; i<liste.length; i++) {
            for(int n=0; n<liste.length-i; n++) {
                if(liste[n]>liste[n+1]) {
                    Tauschen(liste,n,n+1);
                }		
            }
        }
    }

    public static void Ausgabe(int[] liste) {
        System.out.print("{");
        for (int i =0; i<liste.length-1;i++) {
            System.out.print(liste[i]+", ");
        }
        System.out.println(liste[liste.length-1]+"}");
    }

    public static int[] sort(int []liste){
        int[] neueliste = new int[liste.length];
        int temp= 0;
        int index=0;
        for(int j=liste.length-1;j>=0;j--){
            for(int i=0; i<liste.length;i++){
                if(liste[i]>temp){
                    temp = liste[i];
                    index= i;
                    neueliste[j] = temp;
                }
            }
            liste[index] =0;
            temp = 0;
            index = 0;
        }
        return neueliste;
    }

    public static int[] quicksort(int []liste,int start, int ende){
        if(start>=ende){return liste;}   
        if(liste.length==0){return liste;}
        int pivot = liste[start];
        int i = start;
        int j = ende;
        while(i<=j){
            while(liste[i]<pivot){
                i++;
            }while(liste[j]>pivot){ 
                j--;
            }
            if(i<=j){
                Tauschen(liste,i,j);
                i++;
                j--;
            }
        }
        if(start<j){quicksort(liste,start,j);}
        if(ende>i){quicksort(liste,i,ende);}
        return liste;
    }

    public static void main(String[]args){
        System.out.println("ListenlÃ¤nge: / Zeit:");
        for(int n=0;n<500001;n=n+1000){
            int[] liste = ZufallsListe(n);
            int[] liste2 = kopieren(liste);
            int[] liste3 = kopieren(liste);
            long start =System.currentTimeMillis();
            SORTIEREN(liste); 
            long ende =System.currentTimeMillis();
            long start2 =System.currentTimeMillis();
            sort(liste2);
            long ende2 =System.currentTimeMillis();
            long start3 =System.currentTimeMillis();
            quicksort(liste3,0,liste3.length-1);
            long ende3 =System.currentTimeMillis();
            System.out.println(n+":"+(ende-start)+":"+(ende2-start2)+":"+(ende3-start3));
            //System.out.println(n+":"+(ende2-start2));
            //Ausgabe(liste);
            //Ausgabe(Sliste);
        }
    }
}
